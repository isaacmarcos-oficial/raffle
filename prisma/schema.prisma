generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum CampaignType {
  FIXED
  ALEATORY
}

model Campaign {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  code         String       @unique // Código de identificação (ex.: ABC123)
  type         CampaignType // Tipo da rifa (FIXED ou ALEATORY)
  title        String // Nome da rifa
  description  String // Descrição da rifa
  quote        Int // Quantidade de números disponíveis
  price        Float // Preço por número
  startDate    DateTime // Data de início
  drawDate     DateTime // Data do sorteio
  pixCode      String // Chave Pix para pagamento
  contactPhone String // Telefone para envio do comprovante
  minQuotes    Int? // Quantidade mínima (aplicável apenas para rifas aleatórias)
  digitLength  Int? // Número de dígitos para rifas aleatórias
  ownerId      String       @db.ObjectId
  Owner        Owner        @relation(fields: [ownerId], references: [id])
  tickets      Ticket[] // Tickets vinculados à rifa
}

model Ticket {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  number       String // Número escolhido ou atribuído
  paid         Boolean // Se o pagamento foi aprovado
  purchaseDate DateTime // Data da compra
  campaignId   String?   @db.ObjectId
  Campaign     Campaign? @relation(fields: [campaignId], references: [id])
  buyerId      String?   @db.ObjectId
  buyer        Buyer?    @relation(fields: [buyerId], references: [id]) // Relacionamento com o comprador
}

model Owner {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique // E-mail do owner para login
  password String // Senha do owner (para integrar ao NextAuth)
  name     String
  phone    String
  campaign Campaign[] // Rifas criadas pelo owner
}

model Buyer {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String // Nome do comprador
  phone   String   @unique // Telefone como identificador único
  tickets Ticket[] // Tickets adquiridos pelo comprador
}
